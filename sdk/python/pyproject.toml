[project]
name = "lipservice-sdk"
version = "0.2.0"
description = "Python SDK for LipService - AI-powered intelligent log sampling with PostHog integration"
authors = [{name = "LipService Team"}]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
keywords = ["logging", "observability", "ai", "sampling", "cost-optimization", "posthog", "otlp"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Logging",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "httpx>=0.27.0",
    "structlog>=25.4.0",
    "pydantic>=2.10.5",
    # PostHog OTLP integration
    "opentelemetry-sdk>=1.33.1",
    "opentelemetry-exporter-otlp-proto-grpc>=1.33.1",
]

[project.optional-dependencies]
django = ["django>=4.2"]
fastapi = ["fastapi>=0.115.6"]
flask = ["flask>=3.0.0"]
dev = [
    "pytest>=8.3.4",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    "ruff>=0.8.6",
    "mypy>=1.14.1",
    "psutil>=6.0.0",
    "aiohttp>=3.9.0",
    "black>=24.0.0",
    "flake8>=7.0.0",
]

[project.urls]
Homepage = "https://github.com/yourorg/lipservice"
Documentation = "https://lipservice.readthedocs.io"
Repository = "https://github.com/yourorg/lipservice"
Issues = "https://github.com/yourorg/lipservice/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["lipservice"]

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=lipservice --cov-report=term-missing --cov-report=html"

